#
# Wordless: Settings
#
# Copyright (C) 2018 Ye Lei
#
# For license information, see LICENSE.txt.
#

import json

from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
import nltk

from wordless_widgets import *
from wordless_utils import *

class Wordless_Table_Stop_Words(wordless_table.Wordless_Table):
    def __init__(self, main):
        super().__init__(main,
                         headers = ['1', '2', '3', '4', '5'],
                         cols_stretch = ['1', '2', '3', '4', '5'])

        self.horizontalHeader().setHidden(True)
        self.verticalHeader().setHidden(True)

        self.setSelectionBehavior(QAbstractItemView.SelectItems)

        self.button_export_selected.hide()
        self.button_export_all.hide()
        self.button_clear.hide()

    def set_items(self, tokens):
        self.clear_table()

        self.setRowCount((len(tokens) - 1) // self.columnCount() + 1) 

        for i, token in enumerate(tokens):
            row = i // self.columnCount()
            col = i % self.columnCount()

            self.setItem(row, col, QTableWidgetItem(token))

class Wordless_Settings(QDialog):
    def __init__(self, parent):
        def selection_changed():
            self.settings_general.hide()
            self.settings_lemmatization.hide()
            self.settings_stop_words.hide()

            selected_items = self.tree_settings.selectedItems()
            if not selected_items:
                self.tree_settings.findItems(self.tr('General'), Qt.MatchExactly)[0].setSelected(True)
            else:
                if selected_items[0].text(0) == 'General':
                    self.settings_general.show()
                elif selected_items[0].text(0) == 'Lemmatization':
                    self.settings_lemmatization.show()
                elif selected_items[0].text(0) == 'Stop Words':
                    self.settings_stop_words.show()

        super().__init__(parent)

        self.main = parent

        self.setWindowTitle(self.tr('Settings'))
        self.setFixedHeight(600)

        self.accepted.connect(self.apply)

        self.tree_settings = wordless_tree.Wordless_Tree(self)

        self.tree_settings.addTopLevelItem(QTreeWidgetItem(self.tree_settings, [self.tr('General')]))
        self.tree_settings.addTopLevelItem(QTreeWidgetItem(self.tree_settings, [self.tr('Lemmatization')]))
        self.tree_settings.addTopLevelItem(QTreeWidgetItem(self.tree_settings, [self.tr('Stop Words')]))

        self.tree_settings.itemSelectionChanged.connect(selection_changed)

        wrapper_settings = QWidget()

        wrapper_settings.setLayout(QGridLayout())
        wrapper_settings.layout().addWidget(self.init_settings_general(), 0, 0)
        wrapper_settings.layout().addWidget(self.init_settings_lemmatization(), 0, 0)
        wrapper_settings.layout().addWidget(self.init_settings_stop_words(), 0, 0)

        scroll_area_settings = wordless_layout.Wordless_Scroll_Area(self.main, wrapper_settings)

        button_restore_defaults = QPushButton(self.tr('Restore Defaults'), self)
        button_save = QPushButton(self.tr('Save'), self)
        button_apply = QPushButton(self.tr('Apply'), self)
        button_cancel = QPushButton(self.tr('Cancel'), self)

        button_restore_defaults.clicked.connect(lambda: self.load_settings(defaults = True))
        button_save.clicked.connect(self.accept)
        button_apply.clicked.connect(self.apply)
        button_cancel.clicked.connect(self.reject)

        layout_buttons_right = QGridLayout()
        layout_buttons_right.addWidget(button_save, 0, 0)
        layout_buttons_right.addWidget(button_apply, 0, 1)
        layout_buttons_right.addWidget(button_cancel, 0, 2)

        self.setLayout(QGridLayout())
        self.layout().addWidget(self.tree_settings, 0, 0)
        self.layout().addWidget(scroll_area_settings, 0, 1)
        self.layout().addWidget(button_restore_defaults, 1, 0, Qt.AlignLeft)
        self.layout().addLayout(layout_buttons_right, 1, 1, Qt.AlignRight)

        self.layout().setColumnStretch(0, 1)
        self.layout().setColumnStretch(1, 4)

        selection_changed()

    def init_settings_general(self):
        self.settings_general = QWidget(self)

        group_box_encoding = QGroupBox(self.tr('Default Encodings'), self)

        self.label_encoding_input = QLabel(self.tr('Input Encoding:'), self)
        self.combo_box_encoding_input = wordless_widgets.Wordless_Combo_Box_Encoding(self.main)
        self.label_encoding_output = QLabel(self.tr('Output Encoding:'), self)
        self.combo_box_encoding_output = wordless_widgets.Wordless_Combo_Box_Encoding(self.main)

        group_box_encoding.setLayout(QGridLayout())
        group_box_encoding.layout().addWidget(self.label_encoding_input, 0, 0)
        group_box_encoding.layout().addWidget(self.combo_box_encoding_input, 0, 1)
        group_box_encoding.layout().addWidget(self.label_encoding_output, 1, 0)
        group_box_encoding.layout().addWidget(self.combo_box_encoding_output, 1, 1)

        self.label_precision = QLabel(self.tr('Precision:'), self)
        self.spin_box_precision = QSpinBox(self)

        self.spin_box_precision.setRange(0, 10)

        self.settings_general.setLayout(QGridLayout())
        self.settings_general.layout().addWidget(group_box_encoding, 0, 0, 1, 2, Qt.AlignTop)
        self.settings_general.layout().addWidget(self.label_precision, 1, 0, Qt.AlignTop)
        self.settings_general.layout().addWidget(self.spin_box_precision, 1, 1, Qt.AlignTop)

        return self.settings_general

    def init_settings_lemmatization(self):
        def preview_changed():
            lang = wordless_conversion.to_lang_code(self.main, self.combo_box_lemmatization_select_lang.currentText())
            lemmatizer = self.__dict__['combo_box_lemmatizer_' + lang].currentText()

            self.text_edit_lemmatization_preview.clear()

            for sample_line in self.text_edit_lemmatization_samples.toPlainText().split('\n'):
                samples = wordless_text.wordless_word_tokenize(sample_line, lang)
                lemmas = wordless_text.wordless_lemmatize(self.main, samples, lang, lemmatizer = lemmatizer)

                self.text_edit_lemmatization_preview.append(wordless_conversion.to_word_delimiter(lang).join(lemmas))

        settings = self.main.settings_global['lemmatizers']

        self.settings_lemmatization = QWidget(self)

        # Lemmatizers
        group_box_lemmatizers = QGroupBox(self.tr('Lemmatizers'), self)
        wrapper_lemmatizers = QWidget(self)

        self.label_lemmatizer_eng = QLabel(self.tr('English:'), self)
        self.combo_box_lemmatizer_eng = QComboBox(self)
        self.label_lemmatizer_ast = QLabel(self.tr('Asturian:'), self)
        self.combo_box_lemmatizer_ast = QComboBox(self)
        self.label_lemmatizer_bul = QLabel(self.tr('Bulgarian:'), self)
        self.combo_box_lemmatizer_bul = QComboBox(self)
        self.label_lemmatizer_cat = QLabel(self.tr('Catalan:'), self)
        self.combo_box_lemmatizer_cat = QComboBox(self)
        self.label_lemmatizer_ces = QLabel(self.tr('Czech:'), self)
        self.combo_box_lemmatizer_ces = QComboBox(self)
        self.label_lemmatizer_est = QLabel(self.tr('Estonian:'), self)
        self.combo_box_lemmatizer_est = QComboBox(self)
        self.label_lemmatizer_fra = QLabel(self.tr('French:'), self)
        self.combo_box_lemmatizer_fra = QComboBox(self)
        self.label_lemmatizer_gla = QLabel(self.tr('Gaelic (Scots):'), self)
        self.combo_box_lemmatizer_gla = QComboBox(self)
        self.label_lemmatizer_glg = QLabel(self.tr('Galician:'), self)
        self.combo_box_lemmatizer_glg = QComboBox(self)
        self.label_lemmatizer_deu = QLabel(self.tr('German:'), self)
        self.combo_box_lemmatizer_deu = QComboBox(self)
        self.label_lemmatizer_hun = QLabel(self.tr('Hungarian:'), self)
        self.combo_box_lemmatizer_hun = QComboBox(self)
        self.label_lemmatizer_gle = QLabel(self.tr('Irish:'), self)
        self.combo_box_lemmatizer_gle = QComboBox(self)
        self.label_lemmatizer_ita = QLabel(self.tr('Italian:'), self)
        self.combo_box_lemmatizer_ita = QComboBox(self)
        self.label_lemmatizer_glv = QLabel(self.tr('Manx:'), self)
        self.combo_box_lemmatizer_glv = QComboBox(self)
        self.label_lemmatizer_fas = QLabel(self.tr('Persian:'), self)
        self.combo_box_lemmatizer_fas = QComboBox(self)
        self.label_lemmatizer_por = QLabel(self.tr('Portuguese:'), self)
        self.combo_box_lemmatizer_por = QComboBox(self)
        self.label_lemmatizer_ron = QLabel(self.tr('Romanian:'), self)
        self.combo_box_lemmatizer_ron = QComboBox(self)
        self.label_lemmatizer_slk = QLabel(self.tr('Slovak:'), self)
        self.combo_box_lemmatizer_slk = QComboBox(self)
        self.label_lemmatizer_slv = QLabel(self.tr('Slovenian:'), self)
        self.combo_box_lemmatizer_slv = QComboBox(self)
        self.label_lemmatizer_spa = QLabel(self.tr('Spanish (Castilian):'), self)
        self.combo_box_lemmatizer_spa = QComboBox(self)
        self.label_lemmatizer_swe = QLabel(self.tr('Swedish:'), self)
        self.combo_box_lemmatizer_swe = QComboBox(self)
        self.label_lemmatizer_ukr = QLabel(self.tr('Ukrainian:'), self)
        self.combo_box_lemmatizer_ukr = QComboBox(self)
        self.label_lemmatizer_cym = QLabel(self.tr('Welsh:'), self)
        self.combo_box_lemmatizer_cym = QComboBox(self)

        self.combo_box_lemmatizer_eng.addItems(settings[self.label_lemmatizer_eng.text().rstrip(':')])
        self.combo_box_lemmatizer_ast.addItems(settings[self.label_lemmatizer_ast.text().rstrip(':')])
        self.combo_box_lemmatizer_bul.addItems(settings[self.label_lemmatizer_bul.text().rstrip(':')])
        self.combo_box_lemmatizer_cat.addItems(settings[self.label_lemmatizer_cat.text().rstrip(':')])
        self.combo_box_lemmatizer_ces.addItems(settings[self.label_lemmatizer_ces.text().rstrip(':')])
        self.combo_box_lemmatizer_est.addItems(settings[self.label_lemmatizer_est.text().rstrip(':')])
        self.combo_box_lemmatizer_fra.addItems(settings[self.label_lemmatizer_fra.text().rstrip(':')])
        self.combo_box_lemmatizer_gla.addItems(settings[self.label_lemmatizer_gla.text().rstrip(':')])
        self.combo_box_lemmatizer_glg.addItems(settings[self.label_lemmatizer_glg.text().rstrip(':')])
        self.combo_box_lemmatizer_deu.addItems(settings[self.label_lemmatizer_deu.text().rstrip(':')])
        self.combo_box_lemmatizer_hun.addItems(settings[self.label_lemmatizer_hun.text().rstrip(':')])
        self.combo_box_lemmatizer_gle.addItems(settings[self.label_lemmatizer_gle.text().rstrip(':')])
        self.combo_box_lemmatizer_ita.addItems(settings[self.label_lemmatizer_ita.text().rstrip(':')])
        self.combo_box_lemmatizer_glv.addItems(settings[self.label_lemmatizer_glv.text().rstrip(':')])
        self.combo_box_lemmatizer_fas.addItems(settings[self.label_lemmatizer_fas.text().rstrip(':')])
        self.combo_box_lemmatizer_por.addItems(settings[self.label_lemmatizer_por.text().rstrip(':')])
        self.combo_box_lemmatizer_ron.addItems(settings[self.label_lemmatizer_ron.text().rstrip(':')])
        self.combo_box_lemmatizer_slk.addItems(settings[self.label_lemmatizer_slk.text().rstrip(':')])
        self.combo_box_lemmatizer_slv.addItems(settings[self.label_lemmatizer_slv.text().rstrip(':')])
        self.combo_box_lemmatizer_spa.addItems(settings[self.label_lemmatizer_spa.text().rstrip(':')])
        self.combo_box_lemmatizer_swe.addItems(settings[self.label_lemmatizer_swe.text().rstrip(':')])
        self.combo_box_lemmatizer_ukr.addItems(settings[self.label_lemmatizer_ukr.text().rstrip(':')])
        self.combo_box_lemmatizer_cym.addItems(settings[self.label_lemmatizer_cym.text().rstrip(':')])

        self.combo_box_lemmatizer_eng.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_ast.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_bul.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_cat.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_ces.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_est.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_fra.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_gla.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_glg.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_deu.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_hun.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_gle.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_ita.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_glv.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_fas.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_por.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_ron.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_slk.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_slv.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_spa.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_swe.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_ukr.currentTextChanged.connect(preview_changed)
        self.combo_box_lemmatizer_cym.currentTextChanged.connect(preview_changed)

        wrapper_lemmatizers.setLayout(QGridLayout())
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_eng, 0, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_eng, 0, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_ast, 1, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_ast, 1, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_bul, 2, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_bul, 2, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_cat, 3, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_cat, 3, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_ces, 4, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_ces, 4, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_est, 5, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_est, 5, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_fra, 6, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_fra, 6, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_gla, 7, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_gla, 7, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_glg, 8, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_glg, 8, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_deu, 9, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_deu, 9, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_hun, 10, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_hun, 10, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_gle, 11, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_gle, 11, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_ita, 12, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_ita, 12, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_glv, 13, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_glv, 13, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_fas, 14, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_fas, 14, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_por, 15, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_por, 15, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_ron, 16, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_ron, 16, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_slk, 17, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_slk, 17, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_slv, 18, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_slv, 18, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_spa, 19, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_spa, 19, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_swe, 20, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_swe, 20, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_ukr, 21, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_ukr, 21, 1)
        wrapper_lemmatizers.layout().addWidget(self.label_lemmatizer_cym, 22, 0)
        wrapper_lemmatizers.layout().addWidget(self.combo_box_lemmatizer_cym, 22, 1)

        scroll_area_lemmatizers = wordless_layout.Wordless_Scroll_Area(self, wrapper_lemmatizers)
        scroll_area_lemmatizers.setFrameShape(QFrame.NoFrame)

        group_box_lemmatizers.setLayout(QGridLayout())
        group_box_lemmatizers.layout().addWidget(scroll_area_lemmatizers, 0, 0)

        # Preview
        group_box_preview = QGroupBox(self.tr('Preview'), self)

        self.label_lemmatization_select_lang = QLabel(self.tr('Select a Language:'), self)
        self.combo_box_lemmatization_select_lang = wordless_widgets.Wordless_Combo_Box(self)
        self.text_edit_lemmatization_samples = QTextEdit(self)
        self.text_edit_lemmatization_preview = QTextEdit(self)

        self.combo_box_lemmatization_select_lang.addItems(list(settings.keys()))

        self.text_edit_lemmatization_preview.setReadOnly(True)

        self.combo_box_lemmatization_select_lang.currentTextChanged.connect(preview_changed)
        self.text_edit_lemmatization_samples.textChanged.connect(preview_changed)

        layout_select_lang = QGridLayout()
        layout_select_lang.addWidget(self.label_lemmatization_select_lang, 0, 0)
        layout_select_lang.addWidget(self.combo_box_lemmatization_select_lang, 0, 1)

        group_box_preview.setLayout(QGridLayout())
        group_box_preview.layout().addLayout(layout_select_lang, 0, 0, 1, 2, Qt.AlignLeft)
        group_box_preview.layout().addWidget(self.text_edit_lemmatization_samples, 1, 0)
        group_box_preview.layout().addWidget(self.text_edit_lemmatization_preview, 1, 1)

        self.settings_lemmatization.setLayout(QGridLayout())
        self.settings_lemmatization.layout().addWidget(group_box_lemmatizers, 0, 0)
        self.settings_lemmatization.layout().addWidget(group_box_preview, 1, 0)

        preview_changed()

        return self.settings_lemmatization

    def init_settings_stop_words(self):
        def preview_changed():
            lang_text = self.combo_box_stop_words_select_lang.currentText()
            lang_code_639_3 = wordless_conversion.to_lang_code(self.main, lang_text)
            lang_code_639_1 = wordless_conversion.to_iso_639_1(self.main, lang_code_639_3)
            word_list = self.__dict__[f'combo_box_stop_words_{lang_code_639_3}'].currentText()

            if word_list == 'NLTK':
                if lang_text == 'Spanish (Castilian)':
                    lang_text = 'Spanish'

                stop_words = nltk.corpus.stopwords.words(lang_text)
            elif word_list == 'Stopwords ISO':
                if lang_code_639_1 == 'zh_cn':
                    lang_code_639_1 = 'zh'

                with open(r'stop_words/Stopwords ISO/stopwords_iso.json', 'r', encoding = 'utf_8') as f:
                    stop_words = json.load(f)[lang_code_639_1]
            elif word_list == 'stopwords-json':
                if lang_code_639_1 == 'zh_cn':
                    lang_code_639_1 = 'zh'

                with open(r'stop_words/stopwords-json/stopwords-all.json', 'r', encoding = 'utf_8') as f:
                    stop_words = json.load(f)[lang_code_639_1]

            self.label_stop_words_count.setText(self.tr('Count of Stop Words: ') + str(len(stop_words)))
            self.table_stop_words_preview.set_items(stop_words)

        settings = self.main.settings_global['stop_words']

        self.settings_stop_words = QWidget(self)

        # Stop Words
        group_box_stop_words = QGroupBox(self.tr('Stop Words'), self)
        wrapper_stop_words = QWidget(self)

        self.label_stop_words_eng = QLabel(self.tr('English:'), self)
        self.combo_box_stop_words_eng = QComboBox(self)
        self.label_stop_words_afr = QLabel(self.tr('Afrikaans:'), self)
        self.combo_box_stop_words_afr = QComboBox(self)
        self.label_stop_words_ara = QLabel(self.tr('Arabic:'), self)
        self.combo_box_stop_words_ara = QComboBox(self)
        self.label_stop_words_hye = QLabel(self.tr('Armenian:'), self)
        self.combo_box_stop_words_hye = QComboBox(self)
        self.label_stop_words_aze = QLabel(self.tr('Azerbaijani:'), self)
        self.combo_box_stop_words_aze = QComboBox(self)
        self.label_stop_words_eus = QLabel(self.tr('Basque:'), self)
        self.combo_box_stop_words_eus = QComboBox(self)
        self.label_stop_words_ben = QLabel(self.tr('Bengali:'), self)
        self.combo_box_stop_words_ben = QComboBox(self)
        self.label_stop_words_bre = QLabel(self.tr('Breton:'), self)
        self.combo_box_stop_words_bre = QComboBox(self)
        self.label_stop_words_bul = QLabel(self.tr('Bulgarian:'), self)
        self.combo_box_stop_words_bul = QComboBox(self)
        self.label_stop_words_cat = QLabel(self.tr('Catalan:'), self)
        self.combo_box_stop_words_cat = QComboBox(self)
        self.label_stop_words_zho_cn = QLabel(self.tr('Chinese (Simplified):'), self)
        self.combo_box_stop_words_zho_cn = QComboBox(self)
        self.label_stop_words_hrv = QLabel(self.tr('Croatian:'), self)
        self.combo_box_stop_words_hrv = QComboBox(self)
        self.label_stop_words_ces = QLabel(self.tr('Czech:'), self)
        self.combo_box_stop_words_ces = QComboBox(self)
        self.label_stop_words_dan = QLabel(self.tr('Danish:'), self)
        self.combo_box_stop_words_dan = QComboBox(self)
        self.label_stop_words_nld = QLabel(self.tr('Dutch:'), self)
        self.combo_box_stop_words_nld = QComboBox(self)
        self.label_stop_words_epo = QLabel(self.tr('Esperanto:'), self)
        self.combo_box_stop_words_epo = QComboBox(self)
        self.label_stop_words_est = QLabel(self.tr('Estonian:'), self)
        self.combo_box_stop_words_est = QComboBox(self)
        self.label_stop_words_fin = QLabel(self.tr('Finnish:'), self)
        self.combo_box_stop_words_fin = QComboBox(self)
        self.label_stop_words_fra = QLabel(self.tr('French:'), self)
        self.combo_box_stop_words_fra = QComboBox(self)
        self.label_stop_words_glg = QLabel(self.tr('Galician:'), self)
        self.combo_box_stop_words_glg = QComboBox(self)
        self.label_stop_words_deu = QLabel(self.tr('German:'), self)
        self.combo_box_stop_words_deu = QComboBox(self)
        self.label_stop_words_ell = QLabel(self.tr('Greek:'), self)
        self.combo_box_stop_words_ell = QComboBox(self)
        self.label_stop_words_hau = QLabel(self.tr('Hausa:'), self)
        self.combo_box_stop_words_hau = QComboBox(self)
        self.label_stop_words_heb = QLabel(self.tr('Hebrew:'), self)
        self.combo_box_stop_words_heb = QComboBox(self)
        self.label_stop_words_hin = QLabel(self.tr('Hindi:'), self)
        self.combo_box_stop_words_hin = QComboBox(self)
        self.label_stop_words_hun = QLabel(self.tr('Hungarian:'), self)
        self.combo_box_stop_words_hun = QComboBox(self)
        self.label_stop_words_ind = QLabel(self.tr('Indonesian:'), self)
        self.combo_box_stop_words_ind = QComboBox(self)
        self.label_stop_words_gle = QLabel(self.tr('Irish:'), self)
        self.combo_box_stop_words_gle = QComboBox(self)
        self.label_stop_words_ita = QLabel(self.tr('Italian:'), self)
        self.combo_box_stop_words_ita = QComboBox(self)
        self.label_stop_words_jpn = QLabel(self.tr('Japanese:'), self)
        self.combo_box_stop_words_jpn = QComboBox(self)
        self.label_stop_words_kaz = QLabel(self.tr('Kazakh:'), self)
        self.combo_box_stop_words_kaz = QComboBox(self)
        self.label_stop_words_kor = QLabel(self.tr('Korean:'), self)
        self.combo_box_stop_words_kor = QComboBox(self)
        self.label_stop_words_kur = QLabel(self.tr('Kurdish:'), self)
        self.combo_box_stop_words_kur = QComboBox(self)
        self.label_stop_words_lat = QLabel(self.tr('Latin:'), self)
        self.combo_box_stop_words_lat = QComboBox(self)
        self.label_stop_words_lav = QLabel(self.tr('Latvian:'), self)
        self.combo_box_stop_words_lav = QComboBox(self)
        self.label_stop_words_mar = QLabel(self.tr('Marathi:'), self)
        self.combo_box_stop_words_mar = QComboBox(self)
        self.label_stop_words_msa = QLabel(self.tr('Malay:'), self)
        self.combo_box_stop_words_msa = QComboBox(self)
        self.label_stop_words_nep = QLabel(self.tr('Nepali:'), self)
        self.combo_box_stop_words_nep = QComboBox(self)
        self.label_stop_words_nor = QLabel(self.tr('Norwegian:'), self)
        self.combo_box_stop_words_nor = QComboBox(self)
        self.label_stop_words_fas = QLabel(self.tr('Persian:'), self)
        self.combo_box_stop_words_fas = QComboBox(self)
        self.label_stop_words_pol = QLabel(self.tr('Polish:'), self)
        self.combo_box_stop_words_pol = QComboBox(self)
        self.label_stop_words_por = QLabel(self.tr('Portuguese:'), self)
        self.combo_box_stop_words_por = QComboBox(self)
        self.label_stop_words_ron = QLabel(self.tr('Romanian:'), self)
        self.combo_box_stop_words_ron = QComboBox(self)
        self.label_stop_words_rus = QLabel(self.tr('Russian:'), self)
        self.combo_box_stop_words_rus = QComboBox(self)
        self.label_stop_words_slk = QLabel(self.tr('Slovak:'), self)
        self.combo_box_stop_words_slk = QComboBox(self)
        self.label_stop_words_slv = QLabel(self.tr('Slovenian:'), self)
        self.combo_box_stop_words_slv = QComboBox(self)
        self.label_stop_words_sot = QLabel(self.tr('Sotho, Southern:'), self)
        self.combo_box_stop_words_sot = QComboBox(self)
        self.label_stop_words_som = QLabel(self.tr('Somali:'), self)
        self.combo_box_stop_words_som = QComboBox(self)
        self.label_stop_words_spa = QLabel(self.tr('Spanish (Castilian):'), self)
        self.combo_box_stop_words_spa = QComboBox(self)
        self.label_stop_words_swa = QLabel(self.tr('Swahili:'), self)
        self.combo_box_stop_words_swa = QComboBox(self)
        self.label_stop_words_swe = QLabel(self.tr('Swedish:'), self)
        self.combo_box_stop_words_swe = QComboBox(self)
        self.label_stop_words_tgl = QLabel(self.tr('Tagalog:'), self)
        self.combo_box_stop_words_tgl = QComboBox(self)
        self.label_stop_words_tha = QLabel(self.tr('Thai:'), self)
        self.combo_box_stop_words_tha = QComboBox(self)
        self.label_stop_words_tur = QLabel(self.tr('Turkish:'), self)
        self.combo_box_stop_words_tur = QComboBox(self)
        self.label_stop_words_ukr = QLabel(self.tr('Ukrainian:'), self)
        self.combo_box_stop_words_ukr = QComboBox(self)
        self.label_stop_words_urd = QLabel(self.tr('Urdu:'), self)
        self.combo_box_stop_words_urd = QComboBox(self)
        self.label_stop_words_vie = QLabel(self.tr('Vietnamese:'), self)
        self.combo_box_stop_words_vie = QComboBox(self)
        self.label_stop_words_yor = QLabel(self.tr('Yoruba:'), self)
        self.combo_box_stop_words_yor = QComboBox(self)
        self.label_stop_words_zul = QLabel(self.tr('Zulu:'), self)
        self.combo_box_stop_words_zul = QComboBox(self)

        self.combo_box_stop_words_eng.addItems(settings[self.label_stop_words_eng.text().rstrip(':')])
        self.combo_box_stop_words_afr.addItems(settings[self.label_stop_words_afr.text().rstrip(':')])
        self.combo_box_stop_words_ara.addItems(settings[self.label_stop_words_ara.text().rstrip(':')])
        self.combo_box_stop_words_hye.addItems(settings[self.label_stop_words_hye.text().rstrip(':')])
        self.combo_box_stop_words_aze.addItems(settings[self.label_stop_words_aze.text().rstrip(':')])
        self.combo_box_stop_words_eus.addItems(settings[self.label_stop_words_eus.text().rstrip(':')])
        self.combo_box_stop_words_ben.addItems(settings[self.label_stop_words_ben.text().rstrip(':')])
        self.combo_box_stop_words_bre.addItems(settings[self.label_stop_words_bre.text().rstrip(':')])
        self.combo_box_stop_words_bul.addItems(settings[self.label_stop_words_bul.text().rstrip(':')])
        self.combo_box_stop_words_cat.addItems(settings[self.label_stop_words_cat.text().rstrip(':')])
        self.combo_box_stop_words_zho_cn.addItems(settings[self.label_stop_words_zho_cn.text().rstrip(':')])
        self.combo_box_stop_words_hrv.addItems(settings[self.label_stop_words_hrv.text().rstrip(':')])
        self.combo_box_stop_words_ces.addItems(settings[self.label_stop_words_ces.text().rstrip(':')])
        self.combo_box_stop_words_dan.addItems(settings[self.label_stop_words_dan.text().rstrip(':')])
        self.combo_box_stop_words_nld.addItems(settings[self.label_stop_words_nld.text().rstrip(':')])
        self.combo_box_stop_words_epo.addItems(settings[self.label_stop_words_epo.text().rstrip(':')])
        self.combo_box_stop_words_est.addItems(settings[self.label_stop_words_est.text().rstrip(':')])
        self.combo_box_stop_words_fin.addItems(settings[self.label_stop_words_fin.text().rstrip(':')])
        self.combo_box_stop_words_fra.addItems(settings[self.label_stop_words_fra.text().rstrip(':')])
        self.combo_box_stop_words_glg.addItems(settings[self.label_stop_words_glg.text().rstrip(':')])
        self.combo_box_stop_words_deu.addItems(settings[self.label_stop_words_deu.text().rstrip(':')])
        self.combo_box_stop_words_ell.addItems(settings[self.label_stop_words_ell.text().rstrip(':')])
        self.combo_box_stop_words_hau.addItems(settings[self.label_stop_words_hau.text().rstrip(':')])
        self.combo_box_stop_words_heb.addItems(settings[self.label_stop_words_heb.text().rstrip(':')])
        self.combo_box_stop_words_hin.addItems(settings[self.label_stop_words_hin.text().rstrip(':')])
        self.combo_box_stop_words_hun.addItems(settings[self.label_stop_words_hun.text().rstrip(':')])
        self.combo_box_stop_words_ind.addItems(settings[self.label_stop_words_ind.text().rstrip(':')])
        self.combo_box_stop_words_gle.addItems(settings[self.label_stop_words_gle.text().rstrip(':')])
        self.combo_box_stop_words_ita.addItems(settings[self.label_stop_words_ita.text().rstrip(':')])
        self.combo_box_stop_words_jpn.addItems(settings[self.label_stop_words_jpn.text().rstrip(':')])
        self.combo_box_stop_words_kaz.addItems(settings[self.label_stop_words_kaz.text().rstrip(':')])
        self.combo_box_stop_words_kor.addItems(settings[self.label_stop_words_kor.text().rstrip(':')])
        self.combo_box_stop_words_kur.addItems(settings[self.label_stop_words_kur.text().rstrip(':')])
        self.combo_box_stop_words_lat.addItems(settings[self.label_stop_words_lat.text().rstrip(':')])
        self.combo_box_stop_words_lav.addItems(settings[self.label_stop_words_lav.text().rstrip(':')])
        self.combo_box_stop_words_mar.addItems(settings[self.label_stop_words_mar.text().rstrip(':')])
        self.combo_box_stop_words_msa.addItems(settings[self.label_stop_words_msa.text().rstrip(':')])
        self.combo_box_stop_words_nep.addItems(settings[self.label_stop_words_nep.text().rstrip(':')])
        self.combo_box_stop_words_nor.addItems(settings[self.label_stop_words_nor.text().rstrip(':')])
        self.combo_box_stop_words_fas.addItems(settings[self.label_stop_words_fas.text().rstrip(':')])
        self.combo_box_stop_words_pol.addItems(settings[self.label_stop_words_pol.text().rstrip(':')])
        self.combo_box_stop_words_por.addItems(settings[self.label_stop_words_por.text().rstrip(':')])
        self.combo_box_stop_words_ron.addItems(settings[self.label_stop_words_ron.text().rstrip(':')])
        self.combo_box_stop_words_rus.addItems(settings[self.label_stop_words_rus.text().rstrip(':')])
        self.combo_box_stop_words_slk.addItems(settings[self.label_stop_words_slk.text().rstrip(':')])
        self.combo_box_stop_words_slv.addItems(settings[self.label_stop_words_slv.text().rstrip(':')])
        self.combo_box_stop_words_sot.addItems(settings[self.label_stop_words_sot.text().rstrip(':')])
        self.combo_box_stop_words_som.addItems(settings[self.label_stop_words_som.text().rstrip(':')])
        self.combo_box_stop_words_spa.addItems(settings[self.label_stop_words_spa.text().rstrip(':')])
        self.combo_box_stop_words_swa.addItems(settings[self.label_stop_words_swa.text().rstrip(':')])
        self.combo_box_stop_words_swe.addItems(settings[self.label_stop_words_swe.text().rstrip(':')])
        self.combo_box_stop_words_tgl.addItems(settings[self.label_stop_words_tgl.text().rstrip(':')])
        self.combo_box_stop_words_tha.addItems(settings[self.label_stop_words_tha.text().rstrip(':')])
        self.combo_box_stop_words_tur.addItems(settings[self.label_stop_words_tur.text().rstrip(':')])
        self.combo_box_stop_words_ukr.addItems(settings[self.label_stop_words_ukr.text().rstrip(':')])
        self.combo_box_stop_words_urd.addItems(settings[self.label_stop_words_urd.text().rstrip(':')])
        self.combo_box_stop_words_vie.addItems(settings[self.label_stop_words_vie.text().rstrip(':')])
        self.combo_box_stop_words_yor.addItems(settings[self.label_stop_words_yor.text().rstrip(':')])
        self.combo_box_stop_words_zul.addItems(settings[self.label_stop_words_zul.text().rstrip(':')])

        self.combo_box_stop_words_eng.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_afr.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_ara.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_hye.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_aze.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_eus.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_ben.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_bre.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_bul.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_cat.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_zho_cn.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_hrv.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_ces.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_dan.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_nld.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_epo.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_est.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_fin.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_fra.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_glg.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_deu.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_ell.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_hau.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_heb.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_hin.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_hun.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_ind.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_gle.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_ita.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_jpn.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_kaz.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_kor.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_kur.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_lat.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_lav.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_mar.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_msa.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_nep.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_nor.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_fas.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_pol.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_por.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_ron.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_rus.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_slk.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_slv.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_sot.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_som.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_spa.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_swa.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_swe.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_tgl.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_tha.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_tur.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_ukr.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_urd.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_vie.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_yor.currentTextChanged.connect(preview_changed)
        self.combo_box_stop_words_zul.currentTextChanged.connect(preview_changed)

        wrapper_stop_words.setLayout(QGridLayout())
        wrapper_stop_words.layout().addWidget(self.label_stop_words_eng, 0, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_eng, 0, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_afr, 1, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_afr, 1, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_ara, 2, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_ara, 2, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_hye, 3, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_hye, 3, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_aze, 4, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_aze, 4, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_eus, 5, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_eus, 5, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_ben, 6, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_ben, 6, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_bre, 7, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_bre, 7, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_bul, 8, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_bul, 8, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_cat, 9, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_cat, 9, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_zho_cn, 10, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_zho_cn, 10, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_hrv, 11, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_hrv, 11, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_ces, 12, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_ces, 12, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_dan, 13, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_dan, 13, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_nld, 14, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_nld, 14, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_epo, 15, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_epo, 15, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_est, 16, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_est, 16, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_fin, 17, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_fin, 17, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_fra, 18, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_fra, 18, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_glg, 19, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_glg, 19, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_deu, 20, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_deu, 20, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_ell, 21, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_ell, 21, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_hau, 22, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_hau, 22, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_heb, 23, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_heb, 23, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_hin, 24, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_hin, 24, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_hun, 25, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_hun, 25, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_ind, 26, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_ind, 26, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_gle, 27, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_gle, 27, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_ita, 28, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_ita, 28, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_jpn, 29, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_jpn, 29, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_kaz, 30, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_kaz, 30, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_kor, 31, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_kor, 31, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_kur, 32, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_kur, 32, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_lat, 33, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_lat, 33, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_lav, 34, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_lav, 34, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_mar, 35, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_mar, 35, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_msa, 36, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_msa, 36, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_nep, 37, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_nep, 37, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_nor, 38, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_nor, 38, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_fas, 39, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_fas, 39, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_pol, 40, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_pol, 40, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_por, 41, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_por, 41, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_ron, 42, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_ron, 42, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_rus, 43, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_rus, 43, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_slk, 44, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_slk, 44, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_slv, 45, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_slv, 45, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_sot, 46, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_sot, 46, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_som, 47, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_som, 47, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_spa, 48, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_spa, 48, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_swa, 49, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_swa, 49, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_swe, 50, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_swe, 50, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_tgl, 51, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_tgl, 51, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_tha, 52, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_tha, 52, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_tur, 53, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_tur, 53, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_ukr, 54, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_ukr, 54, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_urd, 55, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_urd, 55, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_vie, 56, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_vie, 56, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_yor, 57, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_yor, 57, 1)
        wrapper_stop_words.layout().addWidget(self.label_stop_words_zul, 58, 0)
        wrapper_stop_words.layout().addWidget(self.combo_box_stop_words_zul, 58, 1)

        scroll_area_stop_words = wordless_layout.Wordless_Scroll_Area(self, wrapper_stop_words)
        scroll_area_stop_words.setFrameShape(QFrame.NoFrame)

        group_box_stop_words.setLayout(QGridLayout())
        group_box_stop_words.layout().addWidget(scroll_area_stop_words, 0, 0)

        # Preview
        group_box_preview = QGroupBox(self.tr('Preview'), self)

        self.label_stop_words_select_lang = QLabel(self.tr('Select a Language:'), self)
        self.combo_box_stop_words_select_lang = wordless_widgets.Wordless_Combo_Box(self)
        self.combo_box_stop_words_select_lang.addItems(list(settings.keys()))

        self.combo_box_stop_words_select_lang.currentTextChanged.connect(preview_changed)

        layout_select_lang = QGridLayout()
        layout_select_lang.addWidget(self.label_stop_words_select_lang, 0, 0)
        layout_select_lang.addWidget(self.combo_box_stop_words_select_lang, 0, 1)

        self.label_stop_words_count = QLabel('', self)

        self.table_stop_words_preview = Wordless_Table_Stop_Words(self)

        group_box_preview.setLayout(QGridLayout())
        group_box_preview.layout().addLayout(layout_select_lang, 0, 0, Qt.AlignLeft)
        group_box_preview.layout().addWidget(self.label_stop_words_count, 0, 1, Qt.AlignRight)
        group_box_preview.layout().addWidget(self.table_stop_words_preview, 1, 0, 1, 2)

        self.settings_stop_words.setLayout(QGridLayout())
        self.settings_stop_words.layout().addWidget(group_box_stop_words, 0, 0)
        self.settings_stop_words.layout().addWidget(group_box_preview, 1, 0)

        preview_changed()

        return self.settings_stop_words

    def load_settings(self, defaults = False):
        if defaults:
            settings = self.main.settings_default
        else:
            settings = self.main.settings_custom

        # General
        self.combo_box_encoding_input.setCurrentText(wordless_conversion.to_encoding_text(self.main, *settings['general']['encoding_input']))
        self.combo_box_encoding_output.setCurrentText(wordless_conversion.to_encoding_text(self.main, *settings['general']['encoding_output']))

        self.spin_box_precision.setValue(settings['general']['precision'])

        # Lemmatization
        self.combo_box_lemmatizer_eng.setCurrentText(settings['lemmatization']['eng'])
        self.combo_box_lemmatizer_ast.setCurrentText(settings['lemmatization']['ast'])
        self.combo_box_lemmatizer_bul.setCurrentText(settings['lemmatization']['bul'])
        self.combo_box_lemmatizer_cat.setCurrentText(settings['lemmatization']['cat'])
        self.combo_box_lemmatizer_ces.setCurrentText(settings['lemmatization']['ces'])
        self.combo_box_lemmatizer_est.setCurrentText(settings['lemmatization']['est'])
        self.combo_box_lemmatizer_fra.setCurrentText(settings['lemmatization']['fra'])
        self.combo_box_lemmatizer_gla.setCurrentText(settings['lemmatization']['gla'])
        self.combo_box_lemmatizer_glg.setCurrentText(settings['lemmatization']['glg'])
        self.combo_box_lemmatizer_deu.setCurrentText(settings['lemmatization']['deu'])
        self.combo_box_lemmatizer_hun.setCurrentText(settings['lemmatization']['hun'])
        self.combo_box_lemmatizer_gle.setCurrentText(settings['lemmatization']['gle'])
        self.combo_box_lemmatizer_ita.setCurrentText(settings['lemmatization']['ita'])
        self.combo_box_lemmatizer_glv.setCurrentText(settings['lemmatization']['glv'])
        self.combo_box_lemmatizer_fas.setCurrentText(settings['lemmatization']['fas'])
        self.combo_box_lemmatizer_por.setCurrentText(settings['lemmatization']['por'])
        self.combo_box_lemmatizer_ron.setCurrentText(settings['lemmatization']['ron'])
        self.combo_box_lemmatizer_slk.setCurrentText(settings['lemmatization']['slk'])
        self.combo_box_lemmatizer_slv.setCurrentText(settings['lemmatization']['slv'])
        self.combo_box_lemmatizer_spa.setCurrentText(settings['lemmatization']['spa'])
        self.combo_box_lemmatizer_swe.setCurrentText(settings['lemmatization']['swe'])
        self.combo_box_lemmatizer_ukr.setCurrentText(settings['lemmatization']['ukr'])
        self.combo_box_lemmatizer_cym.setCurrentText(settings['lemmatization']['cym'])

        self.combo_box_lemmatization_select_lang.setCurrentText(settings['lemmatization']['select_lang'])
        self.text_edit_lemmatization_samples.setText(settings['lemmatization']['samples'])

        # Stop Words
        self.combo_box_stop_words_eng.setCurrentText(settings['stop_words']['eng'])
        self.combo_box_stop_words_afr.setCurrentText(settings['stop_words']['afr'])
        self.combo_box_stop_words_ara.setCurrentText(settings['stop_words']['ara'])
        self.combo_box_stop_words_hye.setCurrentText(settings['stop_words']['hye'])
        self.combo_box_stop_words_aze.setCurrentText(settings['stop_words']['aze'])
        self.combo_box_stop_words_eus.setCurrentText(settings['stop_words']['eus'])
        self.combo_box_stop_words_ben.setCurrentText(settings['stop_words']['ben'])
        self.combo_box_stop_words_bre.setCurrentText(settings['stop_words']['bre'])
        self.combo_box_stop_words_bul.setCurrentText(settings['stop_words']['bul'])
        self.combo_box_stop_words_cat.setCurrentText(settings['stop_words']['cat'])
        self.combo_box_stop_words_zho_cn.setCurrentText(settings['stop_words']['zho_cn'])
        self.combo_box_stop_words_hrv.setCurrentText(settings['stop_words']['hrv'])
        self.combo_box_stop_words_ces.setCurrentText(settings['stop_words']['ces'])
        self.combo_box_stop_words_dan.setCurrentText(settings['stop_words']['dan'])
        self.combo_box_stop_words_nld.setCurrentText(settings['stop_words']['nld'])
        self.combo_box_stop_words_epo.setCurrentText(settings['stop_words']['epo'])
        self.combo_box_stop_words_est.setCurrentText(settings['stop_words']['est'])
        self.combo_box_stop_words_fin.setCurrentText(settings['stop_words']['fin'])
        self.combo_box_stop_words_fra.setCurrentText(settings['stop_words']['fra'])
        self.combo_box_stop_words_glg.setCurrentText(settings['stop_words']['glg'])
        self.combo_box_stop_words_deu.setCurrentText(settings['stop_words']['deu'])
        self.combo_box_stop_words_ell.setCurrentText(settings['stop_words']['ell'])
        self.combo_box_stop_words_hau.setCurrentText(settings['stop_words']['hau'])
        self.combo_box_stop_words_heb.setCurrentText(settings['stop_words']['heb'])
        self.combo_box_stop_words_hin.setCurrentText(settings['stop_words']['hin'])
        self.combo_box_stop_words_hun.setCurrentText(settings['stop_words']['hun'])
        self.combo_box_stop_words_ind.setCurrentText(settings['stop_words']['ind'])
        self.combo_box_stop_words_gle.setCurrentText(settings['stop_words']['gle'])
        self.combo_box_stop_words_ita.setCurrentText(settings['stop_words']['ita'])
        self.combo_box_stop_words_jpn.setCurrentText(settings['stop_words']['jpn'])
        self.combo_box_stop_words_kaz.setCurrentText(settings['stop_words']['kaz'])
        self.combo_box_stop_words_kor.setCurrentText(settings['stop_words']['kor'])
        self.combo_box_stop_words_kur.setCurrentText(settings['stop_words']['kur'])
        self.combo_box_stop_words_lat.setCurrentText(settings['stop_words']['lat'])
        self.combo_box_stop_words_lav.setCurrentText(settings['stop_words']['lav'])
        self.combo_box_stop_words_mar.setCurrentText(settings['stop_words']['mar'])
        self.combo_box_stop_words_msa.setCurrentText(settings['stop_words']['msa'])
        self.combo_box_stop_words_nep.setCurrentText(settings['stop_words']['nep'])
        self.combo_box_stop_words_nor.setCurrentText(settings['stop_words']['nor'])
        self.combo_box_stop_words_fas.setCurrentText(settings['stop_words']['fas'])
        self.combo_box_stop_words_pol.setCurrentText(settings['stop_words']['pol'])
        self.combo_box_stop_words_por.setCurrentText(settings['stop_words']['por'])
        self.combo_box_stop_words_ron.setCurrentText(settings['stop_words']['ron'])
        self.combo_box_stop_words_rus.setCurrentText(settings['stop_words']['rus'])
        self.combo_box_stop_words_slk.setCurrentText(settings['stop_words']['slk'])
        self.combo_box_stop_words_slv.setCurrentText(settings['stop_words']['slv'])
        self.combo_box_stop_words_sot.setCurrentText(settings['stop_words']['sot'])
        self.combo_box_stop_words_som.setCurrentText(settings['stop_words']['som'])
        self.combo_box_stop_words_spa.setCurrentText(settings['stop_words']['spa'])
        self.combo_box_stop_words_swa.setCurrentText(settings['stop_words']['swa'])
        self.combo_box_stop_words_swe.setCurrentText(settings['stop_words']['swe'])
        self.combo_box_stop_words_tgl.setCurrentText(settings['stop_words']['tgl'])
        self.combo_box_stop_words_tha.setCurrentText(settings['stop_words']['tha'])
        self.combo_box_stop_words_tur.setCurrentText(settings['stop_words']['tur'])
        self.combo_box_stop_words_ukr.setCurrentText(settings['stop_words']['ukr'])
        self.combo_box_stop_words_urd.setCurrentText(settings['stop_words']['urd'])
        self.combo_box_stop_words_vie.setCurrentText(settings['stop_words']['vie'])
        self.combo_box_stop_words_yor.setCurrentText(settings['stop_words']['yor'])
        self.combo_box_stop_words_zul.setCurrentText(settings['stop_words']['zul'])

        self.combo_box_stop_words_select_lang.setCurrentText(settings['stop_words']['select_lang'])

    def apply(self):
        settings = self.main.settings_custom
        # General
        settings['general']['encoding_input'] = wordless_conversion.to_encoding_code(self.main, self.combo_box_encoding_input.currentText())
        settings['general']['encoding_output'] = wordless_conversion.to_encoding_code(self.main, self.combo_box_encoding_output.currentText())

        settings['general']['precision'] = self.spin_box_precision.value()

        # Lemmatization
        settings['lemmatization']['eng'] = self.combo_box_lemmatizer_eng.currentText()
        settings['lemmatization']['ast'] = self.combo_box_lemmatizer_ast.currentText()
        settings['lemmatization']['bul'] = self.combo_box_lemmatizer_bul.currentText()
        settings['lemmatization']['cat'] = self.combo_box_lemmatizer_cat.currentText()
        settings['lemmatization']['ces'] = self.combo_box_lemmatizer_ces.currentText()
        settings['lemmatization']['est'] = self.combo_box_lemmatizer_est.currentText()
        settings['lemmatization']['fra'] = self.combo_box_lemmatizer_fra.currentText()
        settings['lemmatization']['gla'] = self.combo_box_lemmatizer_gla.currentText()
        settings['lemmatization']['glg'] = self.combo_box_lemmatizer_glg.currentText()
        settings['lemmatization']['deu'] = self.combo_box_lemmatizer_deu.currentText()
        settings['lemmatization']['hun'] = self.combo_box_lemmatizer_hun.currentText()
        settings['lemmatization']['gle'] = self.combo_box_lemmatizer_gle.currentText()
        settings['lemmatization']['ita'] = self.combo_box_lemmatizer_ita.currentText()
        settings['lemmatization']['glv'] = self.combo_box_lemmatizer_glv.currentText()
        settings['lemmatization']['fas'] = self.combo_box_lemmatizer_fas.currentText()
        settings['lemmatization']['por'] = self.combo_box_lemmatizer_por.currentText()
        settings['lemmatization']['ron'] = self.combo_box_lemmatizer_ron.currentText()
        settings['lemmatization']['slk'] = self.combo_box_lemmatizer_slk.currentText()
        settings['lemmatization']['slv'] = self.combo_box_lemmatizer_slv.currentText()
        settings['lemmatization']['spa'] = self.combo_box_lemmatizer_spa.currentText()
        settings['lemmatization']['swe'] = self.combo_box_lemmatizer_swe.currentText()
        settings['lemmatization']['ukr'] = self.combo_box_lemmatizer_ukr.currentText()
        settings['lemmatization']['cym'] = self.combo_box_lemmatizer_cym.currentText()

        # Stop Words
        settings['stop_words']['eng'] = self.combo_box_stop_words_eng.currentText()
        settings['stop_words']['afr'] = self.combo_box_stop_words_afr.currentText()
        settings['stop_words']['ara'] = self.combo_box_stop_words_ara.currentText()
        settings['stop_words']['hye'] = self.combo_box_stop_words_hye.currentText()
        settings['stop_words']['aze'] = self.combo_box_stop_words_aze.currentText()
        settings['stop_words']['eus'] = self.combo_box_stop_words_eus.currentText()
        settings['stop_words']['ben'] = self.combo_box_stop_words_ben.currentText()
        settings['stop_words']['bre'] = self.combo_box_stop_words_bre.currentText()
        settings['stop_words']['bul'] = self.combo_box_stop_words_bul.currentText()
        settings['stop_words']['cat'] = self.combo_box_stop_words_cat.currentText()
        settings['stop_words']['zho_cn'] = self.combo_box_stop_words_zho_cn.currentText()
        settings['stop_words']['hrv'] = self.combo_box_stop_words_hrv.currentText()
        settings['stop_words']['ces'] = self.combo_box_stop_words_ces.currentText()
        settings['stop_words']['dan'] = self.combo_box_stop_words_dan.currentText()
        settings['stop_words']['nld'] = self.combo_box_stop_words_nld.currentText()
        settings['stop_words']['epo'] = self.combo_box_stop_words_epo.currentText()
        settings['stop_words']['est'] = self.combo_box_stop_words_est.currentText()
        settings['stop_words']['fin'] = self.combo_box_stop_words_fin.currentText()
        settings['stop_words']['fra'] = self.combo_box_stop_words_fra.currentText()
        settings['stop_words']['glg'] = self.combo_box_stop_words_glg.currentText()
        settings['stop_words']['deu'] = self.combo_box_stop_words_deu.currentText()
        settings['stop_words']['ell'] = self.combo_box_stop_words_ell.currentText()
        settings['stop_words']['hau'] = self.combo_box_stop_words_hau.currentText()
        settings['stop_words']['heb'] = self.combo_box_stop_words_heb.currentText()
        settings['stop_words']['hin'] = self.combo_box_stop_words_hin.currentText()
        settings['stop_words']['hun'] = self.combo_box_stop_words_hun.currentText()
        settings['stop_words']['ind'] = self.combo_box_stop_words_ind.currentText()
        settings['stop_words']['gle'] = self.combo_box_stop_words_gle.currentText()
        settings['stop_words']['ita'] = self.combo_box_stop_words_ita.currentText()
        settings['stop_words']['jpn'] = self.combo_box_stop_words_jpn.currentText()
        settings['stop_words']['kaz'] = self.combo_box_stop_words_kaz.currentText()
        settings['stop_words']['kor'] = self.combo_box_stop_words_kor.currentText()
        settings['stop_words']['kur'] = self.combo_box_stop_words_kur.currentText()
        settings['stop_words']['lat'] = self.combo_box_stop_words_lat.currentText()
        settings['stop_words']['lav'] = self.combo_box_stop_words_lav.currentText()
        settings['stop_words']['mar'] = self.combo_box_stop_words_mar.currentText()
        settings['stop_words']['msa'] = self.combo_box_stop_words_msa.currentText()
        settings['stop_words']['nep'] = self.combo_box_stop_words_nep.currentText()
        settings['stop_words']['nor'] = self.combo_box_stop_words_nor.currentText()
        settings['stop_words']['fas'] = self.combo_box_stop_words_fas.currentText()
        settings['stop_words']['pol'] = self.combo_box_stop_words_pol.currentText()
        settings['stop_words']['por'] = self.combo_box_stop_words_por.currentText()
        settings['stop_words']['ron'] = self.combo_box_stop_words_ron.currentText()
        settings['stop_words']['rus'] = self.combo_box_stop_words_rus.currentText()
        settings['stop_words']['slk'] = self.combo_box_stop_words_slk.currentText()
        settings['stop_words']['slv'] = self.combo_box_stop_words_slv.currentText()
        settings['stop_words']['sot'] = self.combo_box_stop_words_sot.currentText()
        settings['stop_words']['som'] = self.combo_box_stop_words_som.currentText()
        settings['stop_words']['spa'] = self.combo_box_stop_words_spa.currentText()
        settings['stop_words']['swa'] = self.combo_box_stop_words_swa.currentText()
        settings['stop_words']['swe'] = self.combo_box_stop_words_swe.currentText()
        settings['stop_words']['tgl'] = self.combo_box_stop_words_tgl.currentText()
        settings['stop_words']['tha'] = self.combo_box_stop_words_tha.currentText()
        settings['stop_words']['tur'] = self.combo_box_stop_words_tur.currentText()
        settings['stop_words']['ukr'] = self.combo_box_stop_words_ukr.currentText()
        settings['stop_words']['urd'] = self.combo_box_stop_words_urd.currentText()
        settings['stop_words']['vie'] = self.combo_box_stop_words_vie.currentText()
        settings['stop_words']['yor'] = self.combo_box_stop_words_yor.currentText()
        settings['stop_words']['zul'] = self.combo_box_stop_words_zul.currentText()

        settings['stop_words']['select_lang'] = self.combo_box_stop_words_select_lang.currentText()

    def load(self):
        self.load_settings()

        self.tree_settings.clearSelection()

        self.exec()

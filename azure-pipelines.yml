# ----------------------------------------------------------------------
# Wordless: CI - Azure Pipelines
# Copyright (C) 2018-2022  Ye Lei (叶磊)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------

variables:
  PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip

jobs:
# Windows
- job: "Windows"

  pool:
    vmImage: windows-2019

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8.x'
      architecture: 'x64'

  - task: Cache@2
    inputs:
      key: 'python | "$(Agent.OS)" | requirements.txt'
      restoreKeys: |
        python | "$(Agent.OS)"
        python
      path: $(PIP_CACHE_DIR)
    displayName: Cache pip packages

  # Check Python version
  - script: |
      python --version
    displayName: 'Check Python version'

  # Install dependencies
  - script: |
      pip install --upgrade pip setuptools
      pip install --requirement requirements.txt
    displayName: 'Install dependencies'

  # Download data
  - script: |
      python utils/wl_downloader_ci.py
    displayName: 'Download data'

  # Run tests
  - script: |
      cd src
      set PYTHONPATH=%PYTHONPATH%;%cd%

      pytest wl_tests/wl_tests_nlp/test_lemmatization.py
      pytest wl_tests/wl_tests_nlp/test_matching.py
      pytest wl_tests/wl_tests_nlp/test_nlp_utils.py
      pytest wl_tests/wl_tests_nlp/test_pos_tagging.py
      pytest wl_tests/wl_tests_nlp/test_sentence_tokenization.py
      pytest wl_tests/wl_tests_nlp/test_stop_word_lists.py
      pytest wl_tests/wl_tests_nlp/test_syl_tokenization.py
      pytest wl_tests/wl_tests_nlp/test_word_detokenization.py
      pytest wl_tests/wl_tests_nlp/test_word_tokenization.py

      pytest wl_tests/wl_tests_file_area
      pytest --ignore=wl_tests/wl_tests_nlp --ignore=wl_tests/wl_tests_file_area
    displayName: 'Run tests'

# macOS
- job: "macOS"

  pool:
    vmImage: macOS-10.15

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8.x'

  - task: Cache@2
    inputs:
      key: 'python | "$(Agent.OS)" | requirements.txt'
      restoreKeys: |
        python | "$(Agent.OS)"
        python
      path: $(PIP_CACHE_DIR)
    displayName: Cache pip packages

  # Check Python version
  - script: |
      python3 --version
    displayName: 'Check Python version'

  # Install dependencies
  - script: |
      pip3 install --upgrade pip setuptools
      pip3 install --requirement requirements.txt
    displayName: 'Install dependencies'

  # Download data
  - script: |
      python3 utils/wl_downloader_ci.py
    displayName: 'Download data'

  # Run tests
  - script: |
      cd src
      export PYTHONPATH="$PYTHONPATH;$PWD"

      pytest wl_tests/wl_tests_nlp/test_lemmatization.py
      pytest wl_tests/wl_tests_nlp/test_matching.py
      pytest wl_tests/wl_tests_nlp/test_nlp_utils.py
      pytest wl_tests/wl_tests_nlp/test_pos_tagging.py
      pytest wl_tests/wl_tests_nlp/test_sentence_tokenization.py
      pytest wl_tests/wl_tests_nlp/test_stop_word_lists.py
      pytest wl_tests/wl_tests_nlp/test_syl_tokenization.py
      pytest wl_tests/wl_tests_nlp/test_word_detokenization.py
      pytest wl_tests/wl_tests_nlp/test_word_tokenization.py

      pytest wl_tests/wl_tests_file_area
      pytest --ignore=wl_tests/wl_tests_nlp --ignore=wl_tests/wl_tests_file_area
    displayName: 'Run tests'

# Linux
- job: "Linux"

  pool:
    vmImage: ubuntu-18.04

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8.x'

  - task: Cache@2
    inputs:
      key: 'python | "$(Agent.OS)" | requirements.txt'
      restoreKeys: |
        python | "$(Agent.OS)"
        python
      path: $(PIP_CACHE_DIR)
    displayName: Cache pip packages

  # Check Python version
  - script: |
      python3.8 --version
    displayName: 'Check Python version'

  # Install dependencies
  - script: |
      pip3.8 install --upgrade pip setuptools
      pip3.8 install numpy
      pip3.8 install --requirement requirements.txt
    displayName: 'Install dependencies'

  # Download data
  - script: |
      python3.8 utils/wl_downloader_ci.py
    displayName: 'Download data'

  # Run tests
  - script: |
      cd src
      export PYTHONPATH="$PYTHONPATH;$PWD"

      pytest wl_tests/wl_tests_nlp/test_lemmatization.py
      pytest wl_tests/wl_tests_nlp/test_matching.py
      pytest wl_tests/wl_tests_nlp/test_nlp_utils.py
      pytest wl_tests/wl_tests_nlp/test_pos_tagging.py
      pytest wl_tests/wl_tests_nlp/test_sentence_tokenization.py
      pytest wl_tests/wl_tests_nlp/test_stop_word_lists.py
      pytest wl_tests/wl_tests_nlp/test_syl_tokenization.py
      pytest wl_tests/wl_tests_nlp/test_word_detokenization.py
      pytest wl_tests/wl_tests_nlp/test_word_tokenization.py

      pytest --ignore=wl_tests/wl_tests_nlp --ignore=wl_tests/wl_tests_file_area --ignore=wl_tests/wl_tests_work_area
    displayName: 'Run tests'

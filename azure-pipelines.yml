# ----------------------------------------------------------------------
# Wordless: CI - Azure Pipelines
# Copyright (C) 2018-2022  Ye Lei (叶磊)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------

variables:
  PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip

jobs:
  # Windows
  - job: "Windows"

    pool:
      vmImage: windows-2019

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'
          architecture: 'x64'

      - task: Cache@2
        inputs:
          key: 'python | "$(Agent.OS)" | requirements.txt'
          restoreKeys: |
            python | "$(Agent.OS)"
            python
          path: $(PIP_CACHE_DIR)
        displayName: Cache pip packages

      # Check Python version
      - script: python --version
        displayName: 'Check Python version'

      # Install dependencies
      - script: |
          pip install --upgrade pip setuptools
          pip install --requirement requirements.txt
          :: Download models and data files
          python utils/wl_downloader_ci.py
        displayName: 'Install dependencies'

      # Run tests
      - script: |
          pytest tests/wl_tests_nlp/test_lemmatization.py
          pytest tests/wl_tests_nlp/test_matching.py
          pytest tests/wl_tests_nlp/test_nlp_utils.py
          pytest tests/wl_tests_nlp/test_pos_tagging.py
          pytest tests/wl_tests_nlp/test_sentence_tokenization.py
          pytest tests/wl_tests_nlp/test_stop_word_lists.py
          pytest tests/wl_tests_nlp/test_syl_tokenization.py
          pytest tests/wl_tests_nlp/test_word_detokenization.py
          pytest tests/wl_tests_nlp/test_word_tokenization.py

          pytest tests/wl_tests_file_area
          pytest tests/wl_tests_work_area

          pytest --ignore=tests/wl_tests_nlp --ignore=tests/wl_tests_file_area --ignore=tests/wl_tests_work_area
        displayName: 'Run tests'

  # macOS
  - job: "macOS"

    pool:
      vmImage: macOS-11

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'

      - task: Cache@2
        inputs:
          key: 'python | "$(Agent.OS)" | requirements.txt'
          restoreKeys: |
            python | "$(Agent.OS)"
            python
          path: $(PIP_CACHE_DIR)
        displayName: Cache pip packages

      # Check Python version
      - script: python3 --version
        displayName: 'Check Python version'

      # Install dependencies
      - script: |
          pip3 install --upgrade pip setuptools
          pip3 install --requirement requirements.txt
          # Download models and data files
          python3 utils/wl_downloader_ci.py
        displayName: 'Install dependencies'

      # Run tests
      - script: |
          pytest tests/wl_tests_nlp/test_lemmatization.py
          pytest tests/wl_tests_nlp/test_matching.py
          pytest tests/wl_tests_nlp/test_nlp_utils.py
          pytest tests/wl_tests_nlp/test_pos_tagging.py
          pytest tests/wl_tests_nlp/test_sentence_tokenization.py
          pytest tests/wl_tests_nlp/test_stop_word_lists.py
          pytest tests/wl_tests_nlp/test_syl_tokenization.py
          pytest tests/wl_tests_nlp/test_word_detokenization.py
          pytest tests/wl_tests_nlp/test_word_tokenization.py

          pytest tests/wl_tests_file_area
          # Ignore tests of Profiler due to unknown errors
          pytest tests/wl_tests_work_area --ignore=tests/wl_tests_work_area/test_profiler.py

          pytest --ignore=tests/wl_tests_nlp --ignore=tests/wl_tests_file_area --ignore=tests/wl_tests_work_area
        displayName: 'Run tests'

  # Linux
  - job: "Linux"

    pool:
      vmImage: ubuntu-18.04

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'

      - task: Cache@2
        inputs:
          key: 'python | "$(Agent.OS)" | requirements.txt'
          restoreKeys: |
            python | "$(Agent.OS)"
            python
          path: $(PIP_CACHE_DIR)
        displayName: Cache pip packages

      # Check Python version
      - script: python3.8 --version
        displayName: 'Check Python version'

      # Install dependencies
      - script: |
          pip3.8 install --upgrade pip setuptools
          # Fix installation of pkuseg
          pip3.8 install numpy
          pip3.8 install --requirement requirements.txt
          # Download models and data files
          python3.8 utils/wl_downloader_ci.py
        displayName: 'Install dependencies'

      # Run tests
      - script: |
          pytest tests/wl_tests_nlp/test_lemmatization.py
          pytest tests/wl_tests_nlp/test_matching.py
          pytest tests/wl_tests_nlp/test_nlp_utils.py
          pytest tests/wl_tests_nlp/test_pos_tagging.py
          pytest tests/wl_tests_nlp/test_sentence_tokenization.py
          pytest tests/wl_tests_nlp/test_stop_word_lists.py
          pytest tests/wl_tests_nlp/test_syl_tokenization.py
          pytest tests/wl_tests_nlp/test_word_detokenization.py
          pytest tests/wl_tests_nlp/test_word_tokenization.py

          pytest --ignore=tests/wl_tests_nlp --ignore=tests/wl_tests_file_area --ignore=tests/wl_tests_work_area
        displayName: 'Run tests'

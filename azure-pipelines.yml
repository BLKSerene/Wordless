#
# Wordless: CI - Azure Pipelines
#
# Copyright (C) 2018-2020  Ye Lei (叶磊)
#
# This source file is licensed under GNU GPLv3.
# For details, see: https://github.com/BLKSerene/Wordless/blob/master/LICENSE.txt
#
# All other rights reserved.
#

jobs:
# Windows
- job: "Windows"

  pool:
    vmImage: windows-2019

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7.x' 
      architecture: 'x64'

  # Check Python version
  - script: |
      python --version
    displayName: 'Check Python version'

  # Install dependencies
  - script: |
      pip install --upgrade pip
      pip install --requirement requirements.txt
    displayName: 'Install dependencies'

  # Download data
  - script: |
      python downloaders/wl_downloader_ci.py
    displayName: 'Download data'

  # Run tests
  - script: |
      cd src
      pytest wl_tests/wl_text/test_sentence_tokenization.py
      pytest wl_tests/wl_text/test_word_tokenization.py
      pytest wl_tests/wl_text/test_word_detokenization.py
      pytest wl_tests/wl_text/test_pos_tagging.py
      pytest wl_tests/wl_text/test_lemmatization.py
      pytest wl_tests/wl_text/test_stop_words.py
      pytest --ignore=wl_tests/wl_text/test_sentence_tokenization.py --ignore=wl_tests/wl_text/test_word_tokenization.py --ignore=wl_tests/wl_text/test_word_detokenization.py --ignore=wl_tests/wl_text/test_pos_tagging.py --ignore=pytest wl_tests/wl_text/test_lemmatization.py
    displayName: 'Run tests'

# macOS
- job: "macOS"

  pool:
    vmImage: macOS-10.14

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7.x' 

  # Check Python version
  - script: |
      python3 --version
    displayName: 'Check Python version'

  # Install dependencies
  - script: |
      pip3 install --upgrade pip
      pip3 install --requirement requirements.txt
    displayName: 'Install dependencies'

  # Download data
  - script: |
      python3 downloaders/wl_downloader_ci.py
    displayName: 'Download data'

  # Run tests
  - script: |
      cd src
      pytest wl_tests/wl_text/test_sentence_tokenization.py
      pytest wl_tests/wl_text/test_word_tokenization.py
      pytest wl_tests/wl_text/test_word_detokenization.py
      pytest wl_tests/wl_text/test_pos_tagging.py
      pytest wl_tests/wl_text/test_lemmatization.py
      pytest wl_tests/wl_text/test_stop_words.py
      pytest --ignore=wl_tests/wl_text/test_sentence_tokenization.py --ignore=wl_tests/wl_text/test_word_tokenization.py --ignore=wl_tests/wl_text/test_word_detokenization.py --ignore=wl_tests/wl_text/test_pos_tagging.py --ignore=pytest wl_tests/wl_text/test_lemmatization.py
    displayName: 'Run tests'

# Linux
- job: "Linux"

  pool:
    vmImage: ubuntu-16.04

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7.x' 

  # Check Python version
  - script: |
      python3.7 --version
    displayName: 'Check Python version'

  # Install dependencies
  - script: |
      pip3.7 install --upgrade pip
      pip3.7 install --requirement requirements.txt
    displayName: 'Install dependencies'

  # Download data
  - script: |
      python3.7 downloaders/wl_downloader_ci.py
    displayName: 'Download data'

  # Run tests
  - script: |
      cd src
      pytest wl_tests/wl_text/test_sentence_tokenization.py
      pytest wl_tests/wl_text/test_word_tokenization.py
      pytest wl_tests/wl_text/test_word_detokenization.py
      pytest wl_tests/wl_text/test_pos_tagging.py
      pytest wl_tests/wl_text/test_lemmatization.py
      pytest wl_tests/wl_text/test_stop_words.py
      pytest --ignore=wl_tests/wl_text/test_sentence_tokenization.py --ignore=wl_tests/wl_text/test_word_tokenization.py --ignore=wl_tests/wl_text/test_word_detokenization.py --ignore=wl_tests/wl_text/test_pos_tagging.py --ignore=pytest wl_tests/wl_text/test_lemmatization.py
    displayName: 'Run tests'

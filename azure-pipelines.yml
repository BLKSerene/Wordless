# ----------------------------------------------------------------------
# Tests: CI - Azure Pipelines
# Copyright (C) 2018-2025  Ye Lei (叶磊)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------

variables:
  PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip

jobs:
  # Windows
  - job: "Windows"

    pool:
      vmImage: windows-2019

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.11'
          architecture: 'x64'

      - task: Cache@2
        inputs:
          key: 'pip | "$(Agent.OS)" | requirements/requirements_tests.txt'
          restoreKeys: |
            pip | "$(Agent.OS)"
          path: $(PIP_CACHE_DIR)
        displayName: Cache pip packages

      - script: |
          pip install --upgrade pip setuptools
          pip install --requirement requirements/requirements_tests.txt
          :: Download models and data files
          python utils/wl_downloader_ci.py
        displayName: 'Install dependencies'

      - script: |
          :: Run some tests separately to reduce memory usage
          pytest tests/tests_nlp/tests_spacy/test_spacy_eng.py
          pytest tests/tests_nlp/tests_stanza/test_stanza_eng.py

          pytest tests/tests_nlp/test_dependency_parsing.py
          pytest tests/tests_nlp/test_lemmatization.py
          pytest tests/tests_nlp/test_matching.py
          pytest tests/tests_nlp/test_nlp_utils.py
          pytest tests/tests_nlp/test_pos_tagging.py
          pytest tests/tests_nlp/test_sentence_tokenization.py
          pytest tests/tests_nlp/test_sentiment_analysis.py
          pytest tests/tests_nlp/test_stop_word_lists.py
          pytest tests/tests_nlp/test_syl_tokenization.py
          pytest tests/tests_nlp/test_texts.py
          pytest tests/tests_nlp/test_word_detokenization.py
          pytest tests/tests_nlp/test_word_tokenization.py

          pytest tests/test_colligation_extractor.py
          pytest tests/test_collocation_extractor.py
          pytest tests/test_concordancer.py
          pytest tests/test_concordancer_parallel.py
          pytest tests/test_dependency_parser.py
          pytest tests/test_keyword_extractor.py
          pytest tests/test_main.py
          pytest tests/test_ngram_generator.py
          pytest tests/test_profiler.py
          pytest tests/test_wordlist_generator.py

          pytest --ignore=tests/tests_nlp --ignore=tests/test_colligation_extractor.py --ignore=tests/test_collocation_extractor.py --ignore=tests/test_concordancer.py --ignore=tests/test_concordancer_parallel.py --ignore=tests/test_dependency_parser.py --ignore=tests/test_keyword_extractor.py --ignore=tests/test_main.py --ignore=tests/test_ngram_generator.py --ignore=tests/test_profiler.py --ignore=tests/test_wordlist_generator.py
        displayName: 'Run tests'

  # macOS
  - job: "macOS"

    pool:
      vmImage: macOS-13

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.11'

      - task: Cache@2
        inputs:
          key: 'pip | "$(Agent.OS)" | requirements/requirements_tests.txt'
          restoreKeys: |
            pip | "$(Agent.OS)"
          path: $(PIP_CACHE_DIR)
        displayName: Cache pip packages

      - script: |
          pip3 install --upgrade pip setuptools
          pip3 install --requirement requirements/requirements_tests_macos.txt
          # Install spacy-pkuseg separately with "--no-deps" to avoid depending on NumPy 2
          pip3 install --no-deps spacy-pkuseg
          # Download models and data files
          python3 utils/wl_downloader_ci.py
        displayName: 'Install dependencies'

      - script: |
          # Run some tests separately to reduce memory usage
          pytest tests/tests_nlp/tests_spacy/test_spacy_eng.py
          pytest tests/tests_nlp/tests_stanza/test_stanza_eng.py

          pytest tests/tests_nlp/test_dependency_parsing.py
          pytest tests/tests_nlp/test_lemmatization.py
          pytest tests/tests_nlp/test_matching.py
          pytest tests/tests_nlp/test_nlp_utils.py
          pytest tests/tests_nlp/test_pos_tagging.py
          pytest tests/tests_nlp/test_sentence_tokenization.py
          pytest tests/tests_nlp/test_sentiment_analysis.py
          pytest tests/tests_nlp/test_stop_word_lists.py
          pytest tests/tests_nlp/test_syl_tokenization.py
          pytest tests/tests_nlp/test_texts.py
          pytest tests/tests_nlp/test_word_detokenization.py
          pytest tests/tests_nlp/test_word_tokenization.py

          pytest tests/test_colligation_extractor.py
          pytest tests/test_collocation_extractor.py
          pytest tests/test_concordancer.py
          pytest tests/test_concordancer_parallel.py
          pytest tests/test_dependency_parser.py
          pytest tests/test_keyword_extractor.py
          pytest tests/test_main.py
          pytest tests/test_ngram_generator.py
          pytest tests/test_profiler.py
          pytest tests/test_wordlist_generator.py

          pytest --ignore=tests/tests_nlp --ignore=tests/test_colligation_extractor.py --ignore=tests/test_collocation_extractor.py --ignore=tests/test_concordancer.py --ignore=tests/test_concordancer_parallel.py --ignore=tests/test_dependency_parser.py --ignore=tests/test_keyword_extractor.py --ignore=tests/test_main.py --ignore=tests/test_ngram_generator.py --ignore=tests/test_profiler.py --ignore=tests/test_wordlist_generator.py
        displayName: 'Run tests'

  # Linux
  - job: "Linux"

    pool:
      vmImage: ubuntu-20.04

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.11'

      - task: Cache@2
        inputs:
          key: 'pip | "$(Agent.OS)" | requirements/requirements_tests.txt'
          restoreKeys: |
            pip | "$(Agent.OS)"
          path: $(PIP_CACHE_DIR)
        displayName: Cache pip packages

      - script: |
          pip3.11 install --upgrade pip setuptools
          pip3.11 install --requirement requirements/requirements_tests.txt
          # Download models and data files
          python3.11 utils/wl_downloader_ci.py
        displayName: 'Install dependencies'

      - script: |
          # Fix PyQt
          export QT_QPA_PLATFORM=offscreen

          # Run some tests separately to reduce memory usage
          pytest tests/tests_nlp/tests_spacy/test_spacy_eng.py
          pytest tests/tests_nlp/tests_stanza/test_stanza_eng.py

          pytest tests/tests_nlp/test_dependency_parsing.py
          pytest tests/tests_nlp/test_lemmatization.py
          pytest tests/tests_nlp/test_matching.py
          pytest tests/tests_nlp/test_nlp_utils.py
          pytest tests/tests_nlp/test_pos_tagging.py
          pytest tests/tests_nlp/test_sentence_tokenization.py
          pytest tests/tests_nlp/test_sentiment_analysis.py
          pytest tests/tests_nlp/test_stop_word_lists.py
          pytest tests/tests_nlp/test_syl_tokenization.py
          pytest tests/tests_nlp/test_texts.py
          pytest tests/tests_nlp/test_word_detokenization.py
          pytest tests/tests_nlp/test_word_tokenization.py

          pytest tests/test_colligation_extractor.py
          pytest tests/test_collocation_extractor.py
          pytest tests/test_concordancer.py
          pytest tests/test_concordancer_parallel.py
          pytest tests/test_dependency_parser.py
          pytest tests/test_keyword_extractor.py
          pytest tests/test_main.py
          pytest tests/test_ngram_generator.py
          pytest tests/test_profiler.py
          pytest tests/test_wordlist_generator.py

          # Exclude tests_settings on Linux
          pytest --ignore=tests/tests_nlp --ignore=tests/test_colligation_extractor.py --ignore=tests/test_collocation_extractor.py --ignore=tests/test_concordancer.py --ignore=tests/test_concordancer_parallel.py --ignore=tests/test_dependency_parser.py --ignore=tests/test_keyword_extractor.py --ignore=tests/test_main.py --ignore=tests/test_ngram_generator.py --ignore=tests/test_profiler.py --ignore=tests/test_wordlist_generator.py --ignore=tests/tests_settings
        displayName: 'Run tests'
